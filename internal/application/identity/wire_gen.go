// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package identity

import (
	"github.com/brycedarling/go-practical-microservices/internal/domain/identity"
	"github.com/brycedarling/go-practical-microservices/internal/infrastructure/config"
)

// Injectors from inject_identity_aggregator.go:

// InitializeAggregator ...
func InitializeAggregator(conf *config.Config) *Aggregator {
	identityRegisteredEventHandler := NewRegisteredEventHandler(conf)
	aggregator := NewAggregator(conf, identityRegisteredEventHandler)
	return aggregator
}

// Injectors from inject_identity_component.go:

// InitializeComponent ...
func InitializeComponent(conf *config.Config) *Component {
	projector := identity.NewProjector()
	identityRegisterEventHandler := NewRegisterEventHandler(conf, projector)
	component := NewComponent(conf, identityRegisterEventHandler)
	return component
}
